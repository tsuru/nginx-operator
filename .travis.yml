language: go
sudo: required
addons:
  apt:
    packages:
    - docker-ce
install:
- go get -u github.com/golang/dep/cmd/dep
- mkdir -p $GOPATH/src/github.com/operator-framework && cd $GOPATH/src/github.com/operator-framework
- git clone https://github.com/operator-framework/operator-sdk.git
- cd operator-sdk && make dep && make install
- cd $TRAVIS_BUILD_DIR
jobs:
  fast_finish: true
  include:
  - stage: test
    script: make test
    env: GOARCH=amd64
    go: 1.10.x
  - stage: test
    script: make test
    env: GOARCH=amd64
    go: master
  - stage: build
    script: make build
    env: GOARCH=amd64
    go: 1.10.x
  - stage: build
    script: make build
    env: GOARCH=amd64
    go: master
  - stage: integration
    script:
      # Download kubectl, which is a requirement for using minikube.
      - curl -Lo kubectl https://storage.googleapis.com/kubernetes-release/release/v1.9.0/bin/linux/amd64/kubectl && chmod +x kubectl && sudo mv kubectl /usr/local/bin/
      # Download minikube.
      - curl -Lo minikube https://storage.googleapis.com/minikube/releases/v0.28.0/minikube-linux-amd64 && chmod +x minikube && sudo mv minikube /usr/local/bin/
      - sudo minikube start --vm-driver=none --kubernetes-version=v1.9.0
      # Fix the kubectl context, as it's often stale.
      - minikube update-context
      # Wait for Kubernetes to be up and ready.
      - JSONPATH='{range .items[*]}{@.metadata.name}:{range @.status.conditions[*]}{@.type}={@.status};{end}{end}'; until kubectl get nodes -o jsonpath="$JSONPATH" 2>&1 | grep -q "Ready=True"; do sleep 1; done
      - make build
      - kubectl apply -f deploy/ --namespace nginx-operator-integration
      - sleep 5s
      - NGINX_OPERATOR_INTEGRATION=1 go test ./...
    go: 1.10.x
    env: GOARCH=amd64
matrix:
  allow_failures:
  - go: master
notifications:
  slack:
    rooms:
      secure: QffxEkIxqwEVgb1bkCWunkErtsPIm2rkwzFiH2cbbBRYQsfYfK1Qn4MwjgftH2zfJxOrAgQ7onMoTc6rxih+XE5V3I/Ct+S6qywqRX60JeoVc/RCP+ywtBnCDwNFtKLc7J8uKh5ZuhdDnx/r7SkCkIZJtoE3QF721PM5JpFNHrNHvs8q6DEgoqHxHHvtWPVuBOiPkLBv0/m7p9SYwXdWbVrjmrhynnvOsmhMfv1sXQUFOSKsus9QESWdct8xnJTOtmsCRzLR7jSViP9e7+QHnyzB/4DcMrhIKKyNptFGR+G30WGY45Wx4w7AvXkDqiNp9RWOFHrt8BGkPv+DbhVEbx1mwArEEVqJEu0Na6WuQGbZUm0uhcjBr+KWJ56AqhmwsX98PHrD6tTfilIQRPGddgltGcYZqNJAl1l/RSZcTGvYdZmGmEPy+xQO3Gg4NmMiRoLe1rC8jNVLodG1yjv3lnnC8sVHROEGHtT4XTYrTc2knGGbZ7s6JKgNztls71+SvISS1PBKOrMMBLC77D8hgeCOY8xePL1UbNmHCroK5i6pDeKohyIhIs+pm93S3kQoBIKuV+oF7y3b+gCQouwAf0B2cnMm0TEci3qlZ8/NOezbaVtxBdeWvlfYk5KxmftYiArwz3AMpgj9wpUu7H6WusSfrl6+WyJN+vSY/OHnOus=
env:
  global:
    - CHANGE_MINIKUBE_NONE_USER=true
    - secure: k8gjK/m52Q5H3RgaPWyU9jCXKLTGA/uFzKGWK3ns1gJEcaMetTXAesPLYewILrNpLLtwbi8iATLNxzf4eLJGtQzpqZkXPdUxrWxcME3Xfh3HxmsLRVFdgwF3tFXtnxXsURjv/MELO4m3fVb/wHGmfeSo4kV3zyaUr2NM8osQ6Y113SB1uAI03modE+Ul9NOzLQzWBW3ET3WlY+7rnavrx5gRkU8i8RGVjzm+brUsn08xM1SSk61+46Y04OJeJV0AV3y4/ELb8/hp6GSrGAPjRsoSLwLEv8tFSSXyCiaM5m5vvAjge84PJcDawOVhxAzB/j0Kt2W5GjemzLFM8/057OkWZAJqNDc7jOiDtOzHItYCwVQA+qlzYfZbUY4YPq52xUKdtuN51OihxJDobbouwn+N4lv0AvJXhv3TG+2mfPTXb80VaKOXhKjXq7WV4lUip0wpRLdAyhroUo5TtW0iODx2vDAoSW2zeOoBYa8jdxpN99hGcnC9M+EBb/SNDEgrFIT7RLT20T9qlXYg4qthWT2Q6g3+kX4CdIete55Cd3VH1oRGO6RxIcSGQO8hSpWbNwfg237V/mLRND+qvayZOoFcx7aB4sm2CdkXRR1IYFGN4NrdAMfYf5neMMhseisMf03/kD8zGNwH5B6p/uw2BUob2f6Pp4UsD2pi1/qZ6x8=